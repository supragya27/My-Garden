{"version":3,"sources":["assets sync /^/.*$","assets/camellia.jpg","assets/carnation.jpg","assets/cyclamen.jpg","assets/daisy.jpg","assets/forget-me-not.jpg","assets/iris.jpg","assets/narcissus.jpg","assets/orchid.jpg","assets/pansy.jpg","assets/poppy.jpg","assets/rose.jpg","assets/sunflower.jpg","assets/tulip.jpg","assets/violet.jpg","components/Heading.js","components/AvalVar.js","components/PlanVar.js","components/AvalList.js","components/PlanList.js","components/Body.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Heading","className","AvalVar","AVar","useContext","AV","PVar","PV","useState","AvalFlowers","length","count","setCount","handleSelect","elem","document","getElementById","target","v","idx","indexOf","splice","setPlanFlowers","PlanFlowers","flower","console","log","onClick","key","src","require","imgName","alt","name","PlanVar","handleRemove","setAvalFlowers","pv","AvalList","PlanList","React","createContext","Body","Provider","value","App","Container","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8e37d962.chunk.js","sourcesContent":["var map = {\n\t\"./camellia.jpg\": 18,\n\t\"./carnation.jpg\": 19,\n\t\"./cyclamen.jpg\": 20,\n\t\"./daisy.jpg\": 21,\n\t\"./forget-me-not.jpg\": 22,\n\t\"./iris.jpg\": 23,\n\t\"./narcissus.jpg\": 24,\n\t\"./orchid.jpg\": 25,\n\t\"./pansy.jpg\": 26,\n\t\"./poppy.jpg\": 27,\n\t\"./rose.jpg\": 28,\n\t\"./sunflower.jpg\": 29,\n\t\"./tulip.jpg\": 30,\n\t\"./violet.jpg\": 31\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8;","module.exports = __webpack_public_path__ + \"static/media/camellia.de75d22e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/carnation.4e89c4f0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cyclamen.d01546cf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/daisy.b6c46096.jpg\";","module.exports = __webpack_public_path__ + \"static/media/forget-me-not.296b9715.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iris.aaebe924.jpg\";","module.exports = __webpack_public_path__ + \"static/media/narcissus.a515ec9c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/orchid.b06c69cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pansy.d53c3991.jpg\";","module.exports = __webpack_public_path__ + \"static/media/poppy.77ac2734.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rose.2943cfa8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunflower.d3594c13.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tulip.ae1a7354.jpg\";","module.exports = __webpack_public_path__ + \"static/media/violet.c95e4d49.jpg\";","import React from 'react'\r\nimport '../App.css'\r\n//import {Alert} from 'react-bootstrap' not working\r\n\r\nfunction Heading() {\r\n    return (\r\n        <div className=\"heading\">\r\n        <div className=\"alert alert-success\">\r\n        <center>\r\n  <h2>My Garden</h2>\r\n  </center>\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Heading\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"../App.css\";\r\nimport { AV, PV } from \"./Body\";\r\n\r\nfunction AvalVar() {\r\n  const AVar = useContext(AV);\r\n  const PVar = useContext(PV);\r\n\r\n  const [count, setCount] = useState(`${AVar.AvalFlowers.length}`);\r\n  const handleSelect = (e) => {\r\n    const elem = document.getElementById(e.target.id);\r\n\r\n    AVar.AvalFlowers.map((v) => {\r\n      if (v.id == elem.id) {\r\n        var idx = AVar.AvalFlowers.indexOf(v);\r\n        AVar.AvalFlowers.splice(idx, 1);\r\n        setCount(count - 1);\r\n        PVar.setPlanFlowers([...PVar.PlanFlowers, v]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const emptyList = () => {\r\n    return (\r\n      <center>\r\n        <h2 className=\"empty\">No Flowers here</h2>\r\n      </center>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"avalvar\">\r\n      {AVar.AvalFlowers.length == 0\r\n        ? emptyList()\r\n        : AVar.AvalFlowers.map((flower) => {\r\n            console.log(\"In map function\");\r\n            console.log(\r\n              \"array length in map function: \" + AVar.AvalFlowers.length\r\n            );\r\n            console.log(AVar.AvalFlowers[0]);\r\n            return (\r\n              <div\r\n                className=\"flwPanel\"\r\n                onClick={handleSelect}\r\n                key={flower.id}\r\n                id={flower.id}\r\n              >\r\n                <img\r\n                  id={flower.id}\r\n                  src={require(`${__dirname}/../assets/${flower.imgName}`)}\r\n                  alt={`${flower.name}`}\r\n                />\r\n                <div className=\"flowName\" id={flower.id}>\r\n                  {flower.name}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AvalVar;\r\n","import React, { useContext } from \"react\";\r\nimport \"../App.css\";\r\nimport { PV, AV } from \"./Body\";\r\n\r\nfunction PlanVar() {\r\n  const PVar = useContext(PV);\r\n  const AVar = useContext(AV);\r\n\r\n  const handleRemove = (e) => {\r\n    const elem = document.getElementById(e.target.id);\r\n    PVar.PlanFlowers.map((v) => {\r\n      if (v.id == elem.id) {\r\n        var idx = PVar.PlanFlowers.indexOf(v);\r\n        PVar.PlanFlowers.splice(idx, 1);\r\n        AVar.setAvalFlowers([...AVar.AvalFlowers, v]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const emptyList = () => {\r\n    return (\r\n      <center>\r\n        <h2 className=\"empty\">No Flowers here</h2>\r\n      </center>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"planvar\">\r\n      {PVar.PlanFlowers.length == 0\r\n        ? emptyList()\r\n        : PVar.PlanFlowers.map((pv) => (\r\n            <div\r\n              className=\"flwPanel\"\r\n              key={pv.id}\r\n              id={pv.id}\r\n              onClick={handleRemove}\r\n            >\r\n              <img\r\n                src={require(`${__dirname}/../assets/${pv.imgName}`)}\r\n                alt={`${pv.name}`}\r\n                id={pv.id}\r\n              />\r\n              <div className=\"flowName\" id={pv.id}>\r\n                {pv.name}\r\n              </div>\r\n            </div>\r\n          ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlanVar;\r\n","import React, { useContext } from \"react\";\r\nimport { AV } from \"./Body\";\r\n\r\nfunction AvalList() {\r\n  const AVar = useContext(AV);\r\n  const emptyList = () => {\r\n    return <h4 className=\"empty\">Empty List</h4>;\r\n  };\r\n  return (\r\n    <div>\r\n      <center>\r\n        <ul>\r\n          {AVar.AvalFlowers.length == 0\r\n            ? emptyList()\r\n            : AVar.AvalFlowers.map((v) => <li key={v.id}>{v.name}</li>)}\r\n        </ul>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AvalList;\r\n","import React, { useContext } from \"react\";\r\nimport { PV } from \"./Body\";\r\n\r\nfunction PlanList() {\r\n  const PVar = useContext(PV);\r\n  const emptyList = () => {\r\n    return <h4 className=\"empty\">Empty List</h4>;\r\n  };\r\n  return (\r\n    <div>\r\n      <center>\r\n        <ul>\r\n          {PVar.PlanFlowers.length == 0\r\n            ? emptyList()\r\n            : PVar.PlanFlowers.map((v) => <li key={v.id}>{v.name}</li>)}\r\n        </ul>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlanList;\r\n","import React, { useState } from \"react\";\r\nimport AvalVar from \"./AvalVar\";\r\nimport PlanVar from \"./PlanVar\";\r\nimport AvalList from \"./AvalList\";\r\nimport PlanList from \"./PlanList\";\r\nimport \"../App.css\";\r\n\r\nexport const AV = React.createContext();\r\nexport const PV = React.createContext();\r\n\r\nfunction Body() {\r\n  const [AvalFlowers, setAvalFlowers] = useState([\r\n    { imgName: \"camellia.jpg\", name: \"Camellia\", id: 1 },\r\n    { imgName: \"carnation.jpg\", name: \"Carnation\", id: 2 },\r\n    { imgName: \"cyclamen.jpg\", name: \"Cyclamen\", id: 3 },\r\n    { imgName: \"daisy.jpg\", name: \"Daisy\", id: 4 },\r\n    { imgName: \"forget-me-not.jpg\", name: \"Forget Me Not\", id: 5 },\r\n    { imgName: \"iris.jpg\", name: \"Iris\", id: 6 },\r\n    { imgName: \"narcissus.jpg\", name: \"Narcissus\", id: 7 },\r\n    { imgName: \"orchid.jpg\", name: \"Orchid\", id: 8 },\r\n    { imgName: \"pansy.jpg\", name: \"Pansy\", id: 9 },\r\n    { imgName: \"poppy.jpg\", name: \"Poppy\", id: 10 },\r\n    { imgName: \"rose.jpg\", name: \"Rose\", id: 11 },\r\n    { imgName: \"sunflower.jpg\", name: \"Sunflower\", id: 12 },\r\n    { imgName: \"tulip.jpg\", name: \"Tulip\", id: 13 },\r\n    { imgName: \"violet.jpg\", name: \"Violet\", id: 14 },\r\n  ]);\r\n\r\n  const [PlanFlowers, setPlanFlowers] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <AV.Provider value={{ AvalFlowers, setAvalFlowers }}>\r\n        <PV.Provider value={{ PlanFlowers, setPlanFlowers }}>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-2\">\r\n              <center>\r\n                <h3>Available Varieties Names</h3>\r\n              </center><br />\r\n              <AvalList />\r\n            </div>\r\n            <div className=\"col-sm-4 rowtop\">\r\n              <center>\r\n                <h1>Shop</h1>\r\n              </center><br />\r\n              <AvalVar />\r\n            </div>\r\n            <div className=\"col-sm-4 rowtop\">\r\n              <center>\r\n                <h1>Garden</h1>\r\n              </center><br />\r\n              <PlanVar />\r\n            </div>\r\n            <div className=\"col-sm-2 pvn\">\r\n              <center>\r\n                <h3>Planted Varieties Names</h3>\r\n              </center><br />\r\n              <PlanList />\r\n            </div>\r\n          </div>\r\n        </PV.Provider>\r\n      </AV.Provider>\r\n      <center>\r\n        <h4 className=\"warning\">\r\n          Click on the flowers in the shop to add them to your garden, and on\r\n          the flowers in the garden to return them.\r\n        </h4>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport Heading from \"./components/Heading\";\r\nimport Body from \"./components/Body\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Heading />\r\n        <Body />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}